{"name":"Playmongodaodemo","tagline":"","body":"## 前書き\r\n\r\nこのプロジェクトは、playMongoDemo をフォークして morphia の DAO を使用する様に拡張しています。\r\n\r\nPlay Framework 2 （java）で mongodb のドライバを使用しDAOを通じ、MongoDBの操作を行います。\r\nPlay Framework 2  と MongoDBがインストールと設定が完了している事を前提に話を進めます。\r\n\r\n動作させるのに必要なモジュールは mongodb-java-driver と morphia jarです。  \r\nplayMongoDemo の説明にもありますが、project/Build.scala に 記述に従い、最初にプロジェクトをロードした時にモジュールは読み込まれます。\r\n\r\n## MongoDBの接続情報の設定\r\n\r\nconf/application.conf に 接続情報を 記述します。\r\n\r\nstorage.api.default.url はホスト名を、\r\nstorage.api.default.portはポート番号を、\r\nstorage.api.default.db は データベース名を、\r\n\r\n記述します。\r\n\r\n一例は次の通りです\r\n\r\n<pre>\r\nstorage.api.default.url=\"127.0.0.1\"\r\nstorage.api.default.db=\"test\"\r\nstorage.api.default.port=27017\r\n</pre>\r\n\r\n## モデルクラスの追加について\r\n\r\nmodels 以下の Group を例に挙げて説明します。\r\n\r\n### アノテーション @Entity \r\n\r\n@Entity とするとクラス名が、コレクション名として使用されますが、コレクションの名前を指定したいときは @Entity(\"groups\") の様にクラス名の前に記述します。\r\nそうすると、 Group が使用するコレクションは groups とする事が出来ます。\r\n\r\n### MongoDBの主キー \r\n\r\n次の様に指定します。必ず使うと思いますので id を指定した共通モデルクラス BaseModel クラスを用意しても良いかもしれません。\r\n\r\n<pre>\r\n@Id\r\npublic ObjectId id;\r\n</pre>\r\n\r\n## DAO の追加方法\r\n\r\ndao.BasicDAO を継承します。GroupDAO を例にあげます。\r\n\r\n<pre>\r\npackage dao;\r\n\r\nimport java.net.UnknownHostException;\r\n\r\nimport models.Group;\r\n\r\nimport dao.BasicDAO;\r\n\r\nimport org.bson.types.ObjectId;\r\n\r\npublic class GroupDAO extends BasicDAO<Group, ObjectId> {\r\n\tpublic GroupDAO() throws NumberFormatException, UnknownHostException {\r\n\t\tsuper();\r\n\t}\r\n}\r\n</pre>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}